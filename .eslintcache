[{"/Users/neo/Ariel/memory-game-tutorial/src/App.js":"1","/Users/neo/Ariel/memory-game-tutorial/src/views/MemoryGameView.js":"2","/Users/neo/Ariel/memory-game-tutorial/src/components/CardComponent.js":"3","/Users/neo/Ariel/memory-game-tutorial/src/index.js":"4"},{"size":177,"mtime":1610184872126,"results":"5","hashOfConfig":"6"},{"size":3364,"mtime":1611397243056,"results":"7","hashOfConfig":"6"},{"size":2567,"mtime":1611395155184,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":1610183920906,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hu91sc",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/neo/Ariel/memory-game-tutorial/src/App.js",[],"/Users/neo/Ariel/memory-game-tutorial/src/views/MemoryGameView.js",["18","19"],"/Users/neo/Ariel/memory-game-tutorial/src/components/CardComponent.js",[],"/Users/neo/Ariel/memory-game-tutorial/src/index.js",[],{"ruleId":"20","severity":1,"message":"21","line":29,"column":29,"nodeType":"22","endLine":43,"endColumn":6},{"ruleId":"20","severity":1,"message":"23","line":99,"column":25,"nodeType":"24","endLine":99,"endColumn":27,"suggestions":"25"},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'cards', 'coverAllCards', and 'shuffleCard'. Either include them or remove the dependency array. You can also do a functional update 'setCards(c => ...)' if you only need 'cards' in the 'setCards' call.","ArrayExpression",["26"],{"desc":"27","fix":"28"},"Update the dependencies array to be: [cards, coverAllCards, shuffleCard]",{"range":"29","text":"30"},[2594,2596],"[cards, coverAllCards, shuffleCard]"]